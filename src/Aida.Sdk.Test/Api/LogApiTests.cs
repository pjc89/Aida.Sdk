/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Aida.Sdk.Client;
using Aida.Sdk.Api;
// uncomment below to import models
//using Aida.Sdk.Model;

namespace Aida.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing LogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LogApiTests : IDisposable
    {
        private LogApi instance;

        public LogApiTests()
        {
            instance = new LogApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LogApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LogApi
            //Assert.IsType<LogApi>(instance);
        }

        /// <summary>
        /// Test ClearLogs
        /// </summary>
        [Fact]
        public void ClearLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ClearLogs();
        }

        /// <summary>
        /// Test ExportLogs
        /// </summary>
        [Fact]
        public void ExportLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ExportLogs();
        }

        /// <summary>
        /// Test GetFilterables
        /// </summary>
        [Fact]
        public void GetFilterablesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFilterables();
            //Assert.IsType<LogFilterablesDto>(response);
        }

        /// <summary>
        /// Test GetLogs
        /// </summary>
        [Fact]
        public void GetLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? startTimeStamp = null;
            //DateTime? endTimeStamp = null;
            //List<string> levels = null;
            //List<string> moduleNames = null;
            //List<string> eventTypes = null;
            //int? page = null;
            //int? pageSize = null;
            //string query = null;
            //string sortCriteriaPropertyName = null;
            //SortDirection? sortCriteriaDirection = null;
            //var response = instance.GetLogs(startTimeStamp, endTimeStamp, levels, moduleNames, eventTypes, page, pageSize, query, sortCriteriaPropertyName, sortCriteriaDirection);
            //Assert.IsType<SearchLogsResultDto>(response);
        }
    }
}
