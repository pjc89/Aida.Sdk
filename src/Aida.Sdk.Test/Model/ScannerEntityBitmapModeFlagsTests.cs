/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing ScannerEntityBitmapModeFlags
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ScannerEntityBitmapModeFlagsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ScannerEntityBitmapModeFlags
        //private ScannerEntityBitmapModeFlags instance;

        public ScannerEntityBitmapModeFlagsTests()
        {
            // TODO uncomment below to create an instance of ScannerEntityBitmapModeFlags
            //instance = new ScannerEntityBitmapModeFlags();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScannerEntityBitmapModeFlags
        /// </summary>
        [Fact]
        public void ScannerEntityBitmapModeFlagsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ScannerEntityBitmapModeFlags
            //Assert.IsType<ScannerEntityBitmapModeFlags>(instance);
        }


        /// <summary>
        /// Test the property 'Invert'
        /// </summary>
        [Fact]
        public void InvertTest()
        {
            // TODO unit test for the property 'Invert'
        }
        /// <summary>
        /// Test the property 'Grayscale'
        /// </summary>
        [Fact]
        public void GrayscaleTest()
        {
            // TODO unit test for the property 'Grayscale'
        }
        /// <summary>
        /// Test the property 'DrillMode'
        /// </summary>
        [Fact]
        public void DrillModeTest()
        {
            // TODO unit test for the property 'DrillMode'
        }
        /// <summary>
        /// Test the property 'DrillGrayscale'
        /// </summary>
        [Fact]
        public void DrillGrayscaleTest()
        {
            // TODO unit test for the property 'DrillGrayscale'
        }
        /// <summary>
        /// Test the property 'Bidirectional'
        /// </summary>
        [Fact]
        public void BidirectionalTest()
        {
            // TODO unit test for the property 'Bidirectional'
        }
        /// <summary>
        /// Test the property 'StartLastLine'
        /// </summary>
        [Fact]
        public void StartLastLineTest()
        {
            // TODO unit test for the property 'StartLastLine'
        }
        /// <summary>
        /// Test the property 'NoLineIncrement'
        /// </summary>
        [Fact]
        public void NoLineIncrementTest()
        {
            // TODO unit test for the property 'NoLineIncrement'
        }
        /// <summary>
        /// Test the property 'ShowBitmap'
        /// </summary>
        [Fact]
        public void ShowBitmapTest()
        {
            // TODO unit test for the property 'ShowBitmap'
        }
        /// <summary>
        /// Test the property 'ShowScanner'
        /// </summary>
        [Fact]
        public void ShowScannerTest()
        {
            // TODO unit test for the property 'ShowScanner'
        }
        /// <summary>
        /// Test the property 'ScanXDir'
        /// </summary>
        [Fact]
        public void ScanXDirTest()
        {
            // TODO unit test for the property 'ScanXDir'
        }
        /// <summary>
        /// Test the property 'PenFrequency'
        /// </summary>
        [Fact]
        public void PenFrequencyTest()
        {
            // TODO unit test for the property 'PenFrequency'
        }
        /// <summary>
        /// Test the property 'JumpOverBlankPixel'
        /// </summary>
        [Fact]
        public void JumpOverBlankPixelTest()
        {
            // TODO unit test for the property 'JumpOverBlankPixel'
        }

    }

}
