/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing ScannerEntityDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ScannerEntityDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ScannerEntityDto
        //private ScannerEntityDto instance;

        public ScannerEntityDtoTests()
        {
            // TODO uncomment below to create an instance of ScannerEntityDto
            //instance = new ScannerEntityDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScannerEntityDto
        /// </summary>
        [Fact]
        public void ScannerEntityDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ScannerEntityDto
            //Assert.IsType<ScannerEntityDto>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'PenId'
        /// </summary>
        [Fact]
        public void PenIdTest()
        {
            // TODO unit test for the property 'PenId'
        }
        /// <summary>
        /// Test the property 'MarkLoopCount'
        /// </summary>
        [Fact]
        public void MarkLoopCountTest()
        {
            // TODO unit test for the property 'MarkLoopCount'
        }
        /// <summary>
        /// Test the property 'MarkFlags'
        /// </summary>
        [Fact]
        public void MarkFlagsTest()
        {
            // TODO unit test for the property 'MarkFlags'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'Prefix'
        /// </summary>
        [Fact]
        public void PrefixTest()
        {
            // TODO unit test for the property 'Prefix'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'UserData'
        /// </summary>
        [Fact]
        public void UserDataTest()
        {
            // TODO unit test for the property 'UserData'
        }
        /// <summary>
        /// Test the property 'LayoutId'
        /// </summary>
        [Fact]
        public void LayoutIdTest()
        {
            // TODO unit test for the property 'LayoutId'
        }
        /// <summary>
        /// Test the property 'LayoutName'
        /// </summary>
        [Fact]
        public void LayoutNameTest()
        {
            // TODO unit test for the property 'LayoutName'
        }
        /// <summary>
        /// Test the property 'RotationAngle'
        /// </summary>
        [Fact]
        public void RotationAngleTest()
        {
            // TODO unit test for the property 'RotationAngle'
        }
        /// <summary>
        /// Test the property 'ExpectedMarkDuration'
        /// </summary>
        [Fact]
        public void ExpectedMarkDurationTest()
        {
            // TODO unit test for the property 'ExpectedMarkDuration'
        }
        /// <summary>
        /// Test the property 'Outline'
        /// </summary>
        [Fact]
        public void OutlineTest()
        {
            // TODO unit test for the property 'Outline'
        }
        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'FontName'
        /// </summary>
        [Fact]
        public void FontNameTest()
        {
            // TODO unit test for the property 'FontName'
        }
        /// <summary>
        /// Test the property 'TextSize'
        /// </summary>
        [Fact]
        public void TextSizeTest()
        {
            // TODO unit test for the property 'TextSize'
        }
        /// <summary>
        /// Test the property 'TextOrientation'
        /// </summary>
        [Fact]
        public void TextOrientationTest()
        {
            // TODO unit test for the property 'TextOrientation'
        }
        /// <summary>
        /// Test the property 'CharSpacing'
        /// </summary>
        [Fact]
        public void CharSpacingTest()
        {
            // TODO unit test for the property 'CharSpacing'
        }
        /// <summary>
        /// Test the property 'TextBaseline'
        /// </summary>
        [Fact]
        public void TextBaselineTest()
        {
            // TODO unit test for the property 'TextBaseline'
        }
        /// <summary>
        /// Test the property 'TextHeightLimit'
        /// </summary>
        [Fact]
        public void TextHeightLimitTest()
        {
            // TODO unit test for the property 'TextHeightLimit'
        }
        /// <summary>
        /// Test the property 'TextLenghtLimit'
        /// </summary>
        [Fact]
        public void TextLenghtLimitTest()
        {
            // TODO unit test for the property 'TextLenghtLimit'
        }
        /// <summary>
        /// Test the property 'TextRadius'
        /// </summary>
        [Fact]
        public void TextRadiusTest()
        {
            // TODO unit test for the property 'TextRadius'
        }
        /// <summary>
        /// Test the property 'TextStartAngle'
        /// </summary>
        [Fact]
        public void TextStartAngleTest()
        {
            // TODO unit test for the property 'TextStartAngle'
        }
        /// <summary>
        /// Test the property 'BitmapModeFlags'
        /// </summary>
        [Fact]
        public void BitmapModeFlagsTest()
        {
            // TODO unit test for the property 'BitmapModeFlags'
        }
        /// <summary>
        /// Test the property 'ImageIntensity'
        /// </summary>
        [Fact]
        public void ImageIntensityTest()
        {
            // TODO unit test for the property 'ImageIntensity'
        }
        /// <summary>
        /// Test the property 'ImageBrightness'
        /// </summary>
        [Fact]
        public void ImageBrightnessTest()
        {
            // TODO unit test for the property 'ImageBrightness'
        }
        /// <summary>
        /// Test the property 'ImageDitherStep'
        /// </summary>
        [Fact]
        public void ImageDitherStepTest()
        {
            // TODO unit test for the property 'ImageDitherStep'
        }
        /// <summary>
        /// Test the property 'HatchPairs'
        /// </summary>
        [Fact]
        public void HatchPairsTest()
        {
            // TODO unit test for the property 'HatchPairs'
        }

    }

}
