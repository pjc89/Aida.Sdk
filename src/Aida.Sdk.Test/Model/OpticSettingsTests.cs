/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing OpticSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OpticSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for OpticSettings
        //private OpticSettings instance;

        public OpticSettingsTests()
        {
            // TODO uncomment below to create an instance of OpticSettings
            //instance = new OpticSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OpticSettings
        /// </summary>
        [Fact]
        public void OpticSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsType" OpticSettings
            //Assert.IsType<OpticSettings>(instance);
        }


        /// <summary>
        /// Test the property 'CameraPresetName'
        /// </summary>
        [Fact]
        public void CameraPresetNameTest()
        {
            // TODO unit test for the property 'CameraPresetName'
        }
        /// <summary>
        /// Test the property 'WarpPerspectiveOutputSizeX'
        /// </summary>
        [Fact]
        public void WarpPerspectiveOutputSizeXTest()
        {
            // TODO unit test for the property 'WarpPerspectiveOutputSizeX'
        }
        /// <summary>
        /// Test the property 'WarpPerspectiveOutputSizeY'
        /// </summary>
        [Fact]
        public void WarpPerspectiveOutputSizeYTest()
        {
            // TODO unit test for the property 'WarpPerspectiveOutputSizeY'
        }
        /// <summary>
        /// Test the property 'PixelsPerMillimeterX'
        /// </summary>
        [Fact]
        public void PixelsPerMillimeterXTest()
        {
            // TODO unit test for the property 'PixelsPerMillimeterX'
        }
        /// <summary>
        /// Test the property 'PixelsPerMillimeterY'
        /// </summary>
        [Fact]
        public void PixelsPerMillimeterYTest()
        {
            // TODO unit test for the property 'PixelsPerMillimeterY'
        }

    }

}
