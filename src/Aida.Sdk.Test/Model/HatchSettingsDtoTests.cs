/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing HatchSettingsDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HatchSettingsDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HatchSettingsDto
        //private HatchSettingsDto instance;

        public HatchSettingsDtoTests()
        {
            // TODO uncomment below to create an instance of HatchSettingsDto
            //instance = new HatchSettingsDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HatchSettingsDto
        /// </summary>
        [Fact]
        public void HatchSettingsDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" HatchSettingsDto
            //Assert.IsType<HatchSettingsDto>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Flags'
        /// </summary>
        [Fact]
        public void FlagsTest()
        {
            // TODO unit test for the property 'Flags'
        }
        /// <summary>
        /// Test the property 'HatchDistance'
        /// </summary>
        [Fact]
        public void HatchDistanceTest()
        {
            // TODO unit test for the property 'HatchDistance'
        }
        /// <summary>
        /// Test the property 'HatchAngle'
        /// </summary>
        [Fact]
        public void HatchAngleTest()
        {
            // TODO unit test for the property 'HatchAngle'
        }
        /// <summary>
        /// Test the property 'HatchStyle'
        /// </summary>
        [Fact]
        public void HatchStyleTest()
        {
            // TODO unit test for the property 'HatchStyle'
        }
        /// <summary>
        /// Test the property 'BeamCompensation'
        /// </summary>
        [Fact]
        public void BeamCompensationTest()
        {
            // TODO unit test for the property 'BeamCompensation'
        }
        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }

    }

}
