/*
 * aida
 *
 * 1.0.366
 *
 * The version of the OpenAPI document: 1.0.366
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Model;
using Aida.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing AppConfig
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AppConfigTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AppConfig
        //private AppConfig instance;

        public AppConfigTests()
        {
            // TODO uncomment below to create an instance of AppConfig
            //instance = new AppConfig();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppConfig
        /// </summary>
        [Fact]
        public void AppConfigInstanceTest()
        {
            // TODO uncomment below to test "IsType" AppConfig
            //Assert.IsType<AppConfig>(instance);
        }


        /// <summary>
        /// Test the property 'MachineModel'
        /// </summary>
        [Fact]
        public void MachineModelTest()
        {
            // TODO unit test for the property 'MachineModel'
        }
        /// <summary>
        /// Test the property 'UdpDiscoveryEnabled'
        /// </summary>
        [Fact]
        public void UdpDiscoveryEnabledTest()
        {
            // TODO unit test for the property 'UdpDiscoveryEnabled'
        }
        /// <summary>
        /// Test the property 'EventTracingEnabled'
        /// </summary>
        [Fact]
        public void EventTracingEnabledTest()
        {
            // TODO unit test for the property 'EventTracingEnabled'
        }
        /// <summary>
        /// Test the property 'NodeId'
        /// </summary>
        [Fact]
        public void NodeIdTest()
        {
            // TODO unit test for the property 'NodeId'
        }
        /// <summary>
        /// Test the property 'Role'
        /// </summary>
        [Fact]
        public void RoleTest()
        {
            // TODO unit test for the property 'Role'
        }
        /// <summary>
        /// Test the property 'ClusterName'
        /// </summary>
        [Fact]
        public void ClusterNameTest()
        {
            // TODO unit test for the property 'ClusterName'
        }
        /// <summary>
        /// Test the property 'MasterBaseAddress'
        /// </summary>
        [Fact]
        public void MasterBaseAddressTest()
        {
            // TODO unit test for the property 'MasterBaseAddress'
        }
        /// <summary>
        /// Test the property 'LogSerialData'
        /// </summary>
        [Fact]
        public void LogSerialDataTest()
        {
            // TODO unit test for the property 'LogSerialData'
        }
        /// <summary>
        /// Test the property 'LaserBoardEnabled'
        /// </summary>
        [Fact]
        public void LaserBoardEnabledTest()
        {
            // TODO unit test for the property 'LaserBoardEnabled'
        }
        /// <summary>
        /// Test the property 'MockLaserBoardEnabled'
        /// </summary>
        [Fact]
        public void MockLaserBoardEnabledTest()
        {
            // TODO unit test for the property 'MockLaserBoardEnabled'
        }
        /// <summary>
        /// Test the property 'BoxTransportEnabled'
        /// </summary>
        [Fact]
        public void BoxTransportEnabledTest()
        {
            // TODO unit test for the property 'BoxTransportEnabled'
        }
        /// <summary>
        /// Test the property 'MockTransportEnabled'
        /// </summary>
        [Fact]
        public void MockTransportEnabledTest()
        {
            // TODO unit test for the property 'MockTransportEnabled'
        }
        /// <summary>
        /// Test the property 'MagEncoderEnabled'
        /// </summary>
        [Fact]
        public void MagEncoderEnabledTest()
        {
            // TODO unit test for the property 'MagEncoderEnabled'
        }
        /// <summary>
        /// Test the property 'MagEncoderPortName'
        /// </summary>
        [Fact]
        public void MagEncoderPortNameTest()
        {
            // TODO unit test for the property 'MagEncoderPortName'
        }
        /// <summary>
        /// Test the property 'PcScEnabled'
        /// </summary>
        [Fact]
        public void PcScEnabledTest()
        {
            // TODO unit test for the property 'PcScEnabled'
        }
        /// <summary>
        /// Test the property 'EncoderEnabled'
        /// </summary>
        [Fact]
        public void EncoderEnabledTest()
        {
            // TODO unit test for the property 'EncoderEnabled'
        }
        /// <summary>
        /// Test the property 'WorkflowsEnabled'
        /// </summary>
        [Fact]
        public void WorkflowsEnabledTest()
        {
            // TODO unit test for the property 'WorkflowsEnabled'
        }
        /// <summary>
        /// Test the property 'ElsaWorkflowsEnabled'
        /// </summary>
        [Fact]
        public void ElsaWorkflowsEnabledTest()
        {
            // TODO unit test for the property 'ElsaWorkflowsEnabled'
        }
        /// <summary>
        /// Test the property 'ScannerAppType'
        /// </summary>
        [Fact]
        public void ScannerAppTypeTest()
        {
            // TODO unit test for the property 'ScannerAppType'
        }
        /// <summary>
        /// Test the property 'ScannerHeadEnabled'
        /// </summary>
        [Fact]
        public void ScannerHeadEnabledTest()
        {
            // TODO unit test for the property 'ScannerHeadEnabled'
        }
        /// <summary>
        /// Test the property 'LocalScannerEnabled'
        /// </summary>
        [Fact]
        public void LocalScannerEnabledTest()
        {
            // TODO unit test for the property 'LocalScannerEnabled'
        }
        /// <summary>
        /// Test the property 'CameraEnabled'
        /// </summary>
        [Fact]
        public void CameraEnabledTest()
        {
            // TODO unit test for the property 'CameraEnabled'
        }
        /// <summary>
        /// Test the property 'LaserBoard'
        /// </summary>
        [Fact]
        public void LaserBoardTest()
        {
            // TODO unit test for the property 'LaserBoard'
        }
        /// <summary>
        /// Test the property 'PcScManager'
        /// </summary>
        [Fact]
        public void PcScManagerTest()
        {
            // TODO unit test for the property 'PcScManager'
        }
        /// <summary>
        /// Test the property 'CameraType'
        /// </summary>
        [Fact]
        public void CameraTypeTest()
        {
            // TODO unit test for the property 'CameraType'
        }
        /// <summary>
        /// Test the property 'BlobTempPath'
        /// </summary>
        [Fact]
        public void BlobTempPathTest()
        {
            // TODO unit test for the property 'BlobTempPath'
        }
        /// <summary>
        /// Test the property 'EnableReverseProxy'
        /// </summary>
        [Fact]
        public void EnableReverseProxyTest()
        {
            // TODO unit test for the property 'EnableReverseProxy'
        }
        /// <summary>
        /// Test the property 'Modules'
        /// </summary>
        [Fact]
        public void ModulesTest()
        {
            // TODO unit test for the property 'Modules'
        }
        /// <summary>
        /// Test the property 'Transport'
        /// </summary>
        [Fact]
        public void TransportTest()
        {
            // TODO unit test for the property 'Transport'
        }
        /// <summary>
        /// Test the property 'OpticSettings'
        /// </summary>
        [Fact]
        public void OpticSettingsTest()
        {
            // TODO unit test for the property 'OpticSettings'
        }
        /// <summary>
        /// Test the property 'Lamp'
        /// </summary>
        [Fact]
        public void LampTest()
        {
            // TODO unit test for the property 'Lamp'
        }
        /// <summary>
        /// Test the property 'SupportedWorkflows'
        /// </summary>
        [Fact]
        public void SupportedWorkflowsTest()
        {
            // TODO unit test for the property 'SupportedWorkflows'
        }
        /// <summary>
        /// Test the property 'UseUsbDisplay'
        /// </summary>
        [Fact]
        public void UseUsbDisplayTest()
        {
            // TODO unit test for the property 'UseUsbDisplay'
        }
        /// <summary>
        /// Test the property 'SamLight'
        /// </summary>
        [Fact]
        public void SamLightTest()
        {
            // TODO unit test for the property 'SamLight'
        }
        /// <summary>
        /// Test the property 'WebHooks'
        /// </summary>
        [Fact]
        public void WebHooksTest()
        {
            // TODO unit test for the property 'WebHooks'
        }

    }

}
